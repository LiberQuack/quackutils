{"mappings":"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","sources":["src/ui/components/payments/stripe/stripe-form.mdx","src/ui/components/payments/stripe/stripe-form.tsx","src/ui/components/payments/stripe/stripe-context.tsx","src/ui/util/hooks/use-await.ts","src/_/inline-error.ts","src/_/dictionary.ts","src/ui/util/switch.ts","src/ui/util/css.ts","node_modules/@parcel/runtime-js/lib/runtime-07f0e9e0dbab7610.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/ui/components/payments/stripe/stripe-elements.tsx"],"sourcesContent":["import {ReactHtmlRender} from \"../../../react-html-render\";\nimport {html} from \"lit\";\nimport \"./stripe-form.tsx\";\nimport \"./stripe-elements.tsx\";\nconst element = html`\n    <stripe-form .stripePublicKey=\"${\"pk_test_51IG332FIx1iLyZGc71gYaVCUDKMPAFlRn49tyrzTqf3FYymriwKSJAnKbWyAK9c9WdIi3gn6O9Y8rOKc1tpSJGmQ00RU6pFiTC\"}\">\n        <stripe-card-number></stripe-card-number>\n        <stripe-card-expiry></stripe-card-expiry>\n        <stripe-card-cvc></stripe-card-cvc>\n    </stripe-form>\n`\n\n<ReactHtmlRender html={element}/>","import \"./stripe-context\"\n\nimport StripeTypes from \"@stripe/stripe-js\";\nimport {CustomElement, CustomEventType} from \"../../../ui-types\";\nimport {useEffect, useLayoutEffect, useRef, useState} from \"haunted/lib/core\";\nimport {Nullable} from \"../../../../_/types\";\nimport {useAwait} from \"../../../util/hooks/use-await\";\nimport {dictionaryMap, listToDictionary} from \"../../../../_/dictionary\";\nimport {component} from \"haunted\";\nimport {html} from \"lit\";\nimport {switcher} from \"../../../util/switch\";\nimport {StripeRef} from \"./types\";\nimport {StripeContext} from \"./stripe-context\";\nimport {css} from \"../../../util/css\";\n\nconst fmt = {\n    err: (...args: any[]) => args\n}\n\nexport type StripeCardformEvents = {\n    onformready: (e: CustomEvent) => void,\n    onelementready: (e: CustomEvent<{ elementType: string }>) => void,\n    onsendcardtoken: (e: CustomEvent<{ token: StripeTypes.Token }>) => void,\n};\n\nexport type StripeCardFormType = CustomElement<{ forceLoading?: boolean, btnContent?: any, stripePublicKey: string, value: StripeRef}, Partial<StripeCardformEvents>>;\n\nexport const StripeForm: StripeCardFormType = function (props) {\n\n    useLayoutEffect(() => {\n        css`\n            stripe-form { display: block }\n        `\n    }, [])\n\n    const [formReady, setFormReady] = useState(false);\n\n    const stripeRef = useRef(null as Nullable<StripeRef>);\n\n    const stripeCb = useAwait(async () => {\n        const stripeImport = await import('@stripe/stripe-js');\n        const stripe = await stripeImport.loadStripe(props.stripePublicKey);\n\n        if (!stripe) {\n            throw \"Could not load stripe\";\n        }\n\n        const stripeElements = stripe.elements();\n\n        const elementsConfig = [\n            {name: \"cardNumber\"},\n            {name: \"cardExpiry\"},\n            {name: \"cardCvc\", opts: {placeholder: \"000\"}}\n        ];\n\n        let readyCount = 0;\n        const stripeElms = elementsConfig.map(cfg => {\n            const stripeElm = stripeElements.create(cfg.name as any, cfg.opts);\n            const container = document.createElement(\"div\");\n\n            stripeElm.mount(container);\n\n            stripeElm.on(\"ready\", (e) => {\n                readyCount += 1;\n                let onElementReadyEvent: CustomEventType<StripeCardformEvents, \"onelementready\"> = new CustomEvent(\"elementready\", {detail: e, bubbles: true});\n                this.dispatchEvent(onElementReadyEvent);\n\n                if (readyCount === elementsConfig.length) {\n                    let onFormReady: CustomEventType<StripeCardformEvents, \"onformready\"> = new CustomEvent(\"formready\", {bubbles: true});\n                    setFormReady(true)\n                    this.dispatchEvent(onFormReady);\n                }\n            })\n\n            return {...cfg, stripeElm, container}\n        })\n\n        const htmlDict = dictionaryMap(listToDictionary(stripeElms, \"name\"), (key, value) => {\n            value.stripeElm.mount(value.container);\n            return [key, value.container];\n        });\n\n        stripeRef.current = {\n            stripeClient: stripe,\n            stripeElements: stripeElements,\n            stripeElementInstances: stripeElms.map(it => it.stripeElm),\n            html: htmlDict as any\n        };\n\n        this.value = stripeRef.current;\n    });\n\n    useEffect(() => {\n        stripeCb.run();\n    }, []);\n\n    const onSubmit = useAwait(async () => {\n            if (formReady && stripeRef.current) {\n                const {stripeClient, stripeElements} = stripeRef.current;\n                const tokenResult = await stripeClient?.createToken(stripeElements.getElement(\"cardNumber\")!);\n\n                if (tokenResult.token) {\n                    const sendTokenEvent: CustomEventType<StripeCardformEvents, \"onsendcardtoken\"> = new CustomEvent(\"sendcardtoken\", {detail: {token: tokenResult.token}, bubbles: true});\n                    this.dispatchEvent(sendTokenEvent)\n                }\n\n                if (tokenResult.error) {\n                    console.warn(tokenResult.error)\n                    throw tokenResult.error;\n                }\n            }\n        }\n    );\n\n    return html`\n        <div style=\"position: relative;\">\n\n                ${!onSubmit.err ? undefined : html`\n                    <div class=\"t-danger\" style=\"margin-bottom: 1.5em\">\n                        ${fmt.err(onSubmit.err)}\n                    </div>\n                `}\n    \n                <ButtonElement onclick=${onSubmit.run} .content=${(\n                    <div>\n                        {switcher(\n                            {case: onSubmit.loading || props.forceLoading, then: \"Cadastrando...\"},\n                            {case: true, then: props.btnContent ?? \"Cadastrar\"},\n                        )}\n                    </div>\n                )}/>\n\n        </div>\n    `\n}\n\nlet potato = component(StripeForm, {useShadowDOM: false, baseElement: StripeContext.Provider});\ncustomElements.define(\"stripe-form\", potato)\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'stripe-form': StripeCardFormType\n    }\n}","import {createContext} from \"haunted\";\nimport {Nullable} from \"../../../../_/types\";\nimport {StripeRef} from \"./types\";\n\nexport const StripeContext = createContext(null as Nullable<StripeRef>);\ncustomElements.define(\"stripe-provider\", StripeContext.Provider);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'stripe-provider': typeof StripeContext.Provider\n    }\n}","import {useState} from \"haunted/lib/core\";\nimport {inlineErr} from \"../../../_/inline-error\";\nimport {Undefinable} from \"../../../_/types\";\n\nexport function useAwait<R, T extends ((...args: any[]) => Promise<R>)>(cb: T): {run: T, result: Undefinable<R>, loading: boolean, err: undefined | Error} {\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState(undefined as undefined | Error);\n    const [result, setResult] = useState(undefined as Undefinable<R>);\n\n    const run = (async (...args) => {\n        if (!loading) {\n            setLoading(true);\n            setErr(undefined);\n            const [result, err] = await inlineErr(cb(...args));\n            setErr(err);\n            setResult(result as any);\n            setLoading(false);\n            return result;\n        }\n    }) as T;\n\n    return {\n        run,\n        loading,\n        result: result as Undefinable<R>,\n        err\n    }\n}","export async function inlineErr<T = any>(arg: Promise<T> | T, preventLog?: boolean): Promise<[T | undefined, Error?]> {\n    try {\n        return [await arg];\n    } catch (err) {\n        if (!preventLog) {\n            console.error(err);\n        }\n        return [undefined, err as any];\n    }\n}","/// <reference lib=\"ES2020\"/>\n\nimport {Dictionary} from \"./types\";\nimport {UnionToIntersection} from \"utility-types\";\nimport {AugmentedRequired} from \"utility-types/dist/mapped-types\";\n\nexport function listToDictionary<T>(list: T[], key: keyof T): Dictionary<T> {\n    return list.reduce((acc, item) => {\n        return {...acc, [item[key] as any]: item}\n    }, {});\n}\n\nexport function dictionaryToList<T>(dict: Dictionary<T>): T[] {\n    return Object.keys(dict).map(key => dict[key]!);\n}\n\nexport function dictionaryForEach<T>(dict: Dictionary<T>, cb: (entry: T, key: string) => void) {\n    Object.keys(dict).forEach(key => {\n        cb(dict[key]!, key);\n    })\n}\n\n/**\n * Generates a new dictionary from the original\n *\n * @example\n *     dictionaryMap({a: 1, b: 2}, (key, value) => [value, key])\n *     // {1: \"a\", 2: \"b\"}\n *\n * @param dict\n * @param cb\n */\nexport function dictionaryMap<T, R = any>(dict: Dictionary<T>, cb: (key: string, value: T, index: number) => [string, R]): Dictionary<R> {\n    const entries = dictionaryMapList(dict, cb)\n    return Object.fromEntries(entries)\n}\n\n/**\n * Returns a list for each entry\n *\n * @example\n *     dictionaryMap({a: 1, b: 2}, (value, key) => value + key)\n *     // [\"a1\", \"b2\"]\n *\n * @param dict\n * @param cb\n */\nexport function dictionaryMapList<T, R>(dict: Dictionary<T>, cb: (key: string, value: T, index: number) => R) {\n    return Object.keys(dict).map((key, index) => {\n        return cb(key, dict[key]!, index);\n    })\n}\n\n/**\n * Reduce values of the dictionary\n *\n * @example key\n *     let list = [{gender: M, id: 1}, {gender: M, id: 2}, {gender: F, id: 3}]\n *     listToDictionaryAcc(list, \"gender\")\n *\n *     // Result:\n *     // {\n *     //     M: [\n *     //            {gender: M, id: 1},\n *     //            {gender: M, id: 2}\n *     //         ],\n *     //     F: [\n *     //            {gender: F, id: 3}\n *     //        ]\n *     // }\n *\n * @param list\n * @param key\n */\nexport function listToDictionaryAcc<T>(list: T[], key: keyof T): Dictionary<T[]> {\n    let acc = {} as any;\n\n    for (let item of list) {\n        let previousValue = acc[item[key] as any] as T[] | undefined\n        acc[item[key] as any] = previousValue ? [...previousValue, item] : [item]\n    }\n\n    return acc;\n}\n\n/**\n * Reduce values of the dictionary\n *\n *\n * @example predicate\n *     let list = [{gender: M, id: 1}, {gender: M, id: 2}, {gender: F, id: 3}]\n *     let predicate = (item) => item.id % 2\n *     listToDictionaryPartitioner([\"even\",\"odd\"], list, predicate)\n *\n *     // Result:\n *     // {\n *     //     \"even\": [\n *     //            {gender: M, id: 1},\n *     //            {gender: M, id: 2}\n *     //         ],\n *     //     \"odd\": [\n *     //            {gender: F, id: 3}\n *     //        ]\n *     // }\n *\n * @param list\n * @param partitions\n * @param predicate\n */\nexport function listToDictionaryPartitioner<T, R extends string>(list: T[], partitions: R[], predicate: ((item: T) => number)): Record<R | \"undefined\", T[]> {\n    let acc = partitions.reduce((a, b) => {\n        a[b] = [];\n        return a;\n    }, {} as Record<R | \"undefined\", T[]>)\n\n    for (let item of list) {\n        let group = partitions[predicate(item)] as R ?? \"undefined\"\n        let previousValue = acc[group] as T[] | undefined\n        acc[group] = previousValue ? [...previousValue, item] : [item]\n    }\n\n    return acc;\n}\n\n\n/**\n * Accumulate dictionary list, resulting a new dictionary of lists\n * @example\n *     let list = [\n *         {a: 5},\n *         {a: 5},\n *         {b: 10},\n *     ]\n\n *     listToDictionaryMergedKeys(list)\n *     // {a: [5,5], b:[10]}\n *\n * @param list\n */\nexport function listToDictionaryMergedKeys<T, U = UnionToIntersection<T>, Result = {[P in keyof U]: U[keyof U][]}>(list: T[]): Result {\n    let acc = {} as Result\n\n    for (let obj of list) {\n        const properties = Object.keys(obj);\n\n        properties.forEach((property) => {\n            const keyAcc = (acc[property as keyof Result] || []) as U[keyof U][];\n            const value = obj[property as keyof T];\n            const nextAcc = [...keyAcc, value] as unknown as Result[keyof Result];\n            acc[property as keyof Result] = nextAcc;\n        });\n    }\n\n    return acc;\n}\n\n/**\n * Reduce dictionary values\n * @example\n *     let dict = {a: 10, b: 20}\n *     dictionaryAcc(dict, 0, (acc, value: number, key: string) => acc + value)\n *     //30\n *\n * @param dict\n * @param acc\n * @param reducer\n */\nexport function dictionaryAcc<T,Y>(dict: Dictionary<T>, acc: Y, reducer: (acc:Y, item:T, key: string) => Y): Y {\n    const result = Object.keys(dict).reduce((reducAcc, key) => {\n        return reducer(reducAcc, dict[key]!, key);\n    }, acc);\n    return result;\n}","export const switcher = (...options: {case: any, then: any}[]) => {\n    return options.find(it => it.case)?.then;\n}","let memory: string[] = [];\n\nexport const css = (template: TemplateStringsArray | string, ...values: (string | number)[]) => {\n\n    let text = \"\";\n\n    if (Array.isArray(template)) {\n        for (let i = 0; i < template.length; i++) {\n            text += template[i];\n            text += values[i];\n        }\n    } else {\n        text = template as string\n    }\n\n    if (memory.indexOf(text) > -1) return\n\n    let styleElement = document.createElement(\"style\");\n    styleElement.innerHTML = text;\n    document.head.appendChild(styleElement);\n\n    memory.push(text);\n};","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"532Ah\"))).then(() => parcelRequire('e8NUo'));","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import {CustomElement} from \"../../../ui-types\";\nimport {useContext, useLayoutEffect} from \"haunted/lib/core\";\nimport {StripeContext} from \"./stripe-context\";\nimport {component} from \"haunted\";\nimport {css} from \"../../../util/css\";\n\nexport const StripeCardNumber: CustomElement = () => {\n        useLayoutEffect(() => {\n        css`\n            stripe-card-number { display: block }\n        `\n    }, [])\n\n    const stripeContext = useContext(StripeContext);\n    return stripeContext?.html?.cardNumber;\n}\n\nexport const StripeCardCvc: CustomElement = () => {\n        useLayoutEffect(() => {\n        css`\n            stripe-card-cvc { display: block }\n        `\n    }, [])\n\n    const stripeContext = useContext(StripeContext);\n    return stripeContext?.html?.cardCvc;\n}\n\nexport const StripeCardExpiry: CustomElement = () => {\n        useLayoutEffect(() => {\n        css`\n            stripe-card-expiry { display: block }\n        `\n    }, [])\n\n    const stripeContext = useContext(StripeContext);\n    return stripeContext?.html?.cardExpiry;\n}\n\ncustomElements.define(\"stripe-card-number\", component(StripeCardNumber, StripeContext.Consumer, {useShadowDOM: false}))\ncustomElements.define(\"stripe-card-cvc\", component(StripeCardCvc, StripeContext.Consumer, {useShadowDOM: false}))\ncustomElements.define(\"stripe-card-expiry\", component(StripeCardExpiry, StripeContext.Consumer, {useShadowDOM: false}))\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'stripe-card-number': typeof StripeContext.Provider\n    }\n}"],"names":["parcelRequire","$1a2234b494dd6b5c$var$element","$jkSQt","html","$1a2234b494dd6b5c$var$layoutProps","$1a2234b494dd6b5c$export$2e2bcd8739ae039","components","props","$di58i","mdx","mdxType","$dlCTC","ReactHtmlRender","isMDXComponent","$aLtEB","$116738dae7e6201e$var$fmt","args","$116738dae7e6201e$var$potato","$9so9i","component","$2NXZw","useLayoutEffect","$gxpVb","css","formReady","setFormReady","useState","stripeRef","useRef","stripeCb","$30Ln9","useAwait","async","stripeImport","stripe","loadStripe","stripePublicKey","stripeElements","elements","elementsConfig","name","opts","placeholder","readyCount","stripeElms","map","cfg","stripeElm","create","container","document","createElement","mount","on","e","onElementReadyEvent","CustomEvent","detail","bubbles","this","dispatchEvent","length","onFormReady","htmlDict","$dcRWp","dictionaryMap","listToDictionary","key","value","current","stripeClient","stripeElementInstances","it","useEffect","run","onSubmit","tokenResult","createToken","getElement","token","sendTokenEvent","error","console","warn","err","undefined","jsx","$lA8qr","switcher","case","loading","forceLoading","then","btnContent","useShadowDOM","baseElement","$1haoc","StripeContext","Provider","customElements","define","$b850749c718dd4e8$export$bdc250ccffdc5290","createContext","$632fd89768f41ead$export$6de935e3b3681947","cb","setLoading","err1","setErr","result1","setResult","result","$9Rmcj","inlineErr","$eceb28fbd7ed915d$export$19af69b8fa933a33","arg","preventLog","$8876083df2f88ce3$export$725fc88309dc522e","list","reduce","acc","item","$8876083df2f88ce3$export$1fd3daa2bcab2ae1","dict","entries","$8876083df2f88ce3$export$bc9d6caaff9f0606","Object","fromEntries","keys","index","$748288a6efaa93b3$export$8987e38cfd004b13","options","find","$b6625843b310f923$var$memory","$b6625843b310f923$export$dbf350e5966cf602","template","values","text","Array","isArray","i","indexOf","styleElement","innerHTML","head","appendChild","push","module","exports","import","resolve","$7c0507e57172cb5a$export$f7ad0328861e2f03","$7c0507e57172cb5a$var$mapping","id","resolved","Error","useContext","cardNumber","Consumer","cardCvc","cardExpiry"],"version":3,"file":"stripe-form.f4019680.js.map"}
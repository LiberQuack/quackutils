{"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;AAMA,MAAM,4BAAM,GAAG,IAAI,AAAC;AACpB,MAAM,4BAAM,GAAG,4BAAM,GAAG,EAAE,AAAC;AAC3B,MAAM,0BAAI,GAAG,4BAAM,GAAG,EAAE,AAAC;AACzB,MAAM,yBAAG,GAAG,0BAAI,GAAG,EAAE,AAAC;AAEf,MAAM,wCAAY,GAAuC,CAAC,cAAC,UAAU,CAAA,EAAC,GAAK;IAE9E,MAAM,WAAW,GAAG,CAAA,GAAA,sBAAO,CAAA,CAAC,IAAM,UAAU,IAAI,6BAAO,CAAC,kCAAY,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC;IACtF,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAA,GAAA,8BAAQ,CAAA,CAAC,WAAW,IAAI,UAAU,CAAC,AAAC;IAC5D,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,CAAA,GAAA,8BAAQ,CAAA,CAAC,CAAC,CAAC,AAAC;IAEpD,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC;IAElD,CAAA,GAAA,+BAAS,CAAA,CAAC,IAAM;QACZ,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACnC,WAAW,CAAC,IAAM;YACd,IAAI,UAAU,EACV,OAAO,CAAC,6BAAO,CAAC,kCAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAElD,EAAE,IAAI,CAAC,CAAC;KACZ,EAAE;QAAC,UAAU;KAAC,CAAC;IAEhB,OAAO,CAAA,GAAA,eAAI,CAAA,CAAC,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,OAAO,CAAC,CAAA;CACrF;AAED,SAAS,kCAAY,CAAC,UAAkB,EAAE;IACtC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,AAAC;IAC3B,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,AAAC;IACzC,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,EAAE,GAAI,WAAW,CAAC,iBAAiB,EAAE,GAAG,4BAAM,AAAC,AAAC;IAClF,MAAM,IAAI,GAAG,MAAM,GAAG,OAAO,AAAC;IAC9B,OAAO,IAAI,CAAA;CACd;AAED,SAAS,6BAAO,CAAC,IAAY,EAAE;IAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,0BAAI,CAAC,CAAC,QAAQ,EAAE,AAAC;IACjD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,AAAC,IAAI,GAAG,0BAAI,GAAI,4BAAM,CAAC,CAAC,QAAQ,EAAE,AAAC;IAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,AAAC,IAAI,GAAG,4BAAM,GAAI,4BAAM,CAAC,CAAC,QAAQ,EAAE,AAAC;IAChE,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;CAC5E;AAED,cAAc,CAAC,MAAM,CAAC,eAAe,EAAE,CAAA,GAAA,wBAAS,CAAA,CAAC,wCAAY,EAAE;IAAC,YAAY,EAAE,KAAK;IAAE,kBAAkB,EAAE;QAAC,aAAa;KAAC;CAAQ,CAAC,CAAC,CAAC","sources":["ui/components/timer-element/timer-element.tsx"],"sourcesContent":["import {CustomElement} from \"../../ui-types\";\nimport {component, useMemo} from \"haunted\";\nimport {html} from \"lit\";\nimport {useEffect, useState} from \"haunted/lib/core\";\nimport {customElement} from \"lit/decorators\";\n\nconst second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\nexport const TimerElement:CustomElement<{targetDate: string}> = ({targetDate}) => {\n\n    const initialDiff = useMemo(() => targetDate && fmtTime(calcTimeDiff(targetDate)), [])\n    const [time, setTime] = useState(initialDiff || \"00:00:00\");\n    const [lastInterval, setLastInterval] = useState(0);\n\n    const [hours, minutes, seconds] = time.split(\":\");\n\n    useEffect(() => {\n        window.clearInterval(lastInterval);\n        setInterval(() => {\n            if (targetDate) {\n                setTime(fmtTime(calcTimeDiff(targetDate)));\n            }\n        }, 1000);\n    }, [targetDate])\n\n    return html`<span>${hours}</span>:<span>${minutes}</span>:<span>${seconds}</span>`\n}\n\nfunction calcTimeDiff(targetDate: string) {\n    const timeNow = Date.now();\n    const targetDatee = new Date(targetDate);\n    const target = targetDatee.getTime() + (targetDatee.getTimezoneOffset() * minute);\n    const diff = target - timeNow;\n    return diff\n}\n\nfunction fmtTime(time: number) {\n    const hours = Math.floor(time / hour).toString();\n    const minutes = Math.floor((time % hour) / minute).toString();\n    const seconds = Math.floor((time % minute) / second).toString();\n    return `${hours}:${minutes.padStart(2, \"0\")}:${seconds.padStart(2, \"0\")}`\n}\n\ncustomElements.define(\"timer-element\", component(TimerElement, {useShadowDOM: false, observedAttributes: [\"target-date\"] as any}));\n"],"names":[],"version":3,"file":"timer-element.d3a93e82.js.map"}
{"mappings":"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","sources":["ui/components/increment-number/increment-number.tsx","node_modules/bezier-easing/src/index.js"],"sourcesContent":["import {CustomElement} from \"../../ui-types\";\nimport {component} from \"haunted\";\nimport {useEffect, useRef, useState} from \"haunted/lib/core\";\nimport BezierEasing from \"bezier-easing\";\nimport {Nullable} from \"../../../types\";\n\n\nexport const IncrementNumber:CustomElement<{from: string, to: string, bezier: string, secondsDuration: string, maxDecimals: string, minDecimals: string}> = function({from, to, bezier, secondsDuration, maxDecimals, minDecimals}) {\n    const attr = {\n        bezier: bezier ?? \"1, 0, 1, 1\",\n        secondsDuration: secondsDuration ?? \"2\",\n        maxDecimals: maxDecimals ?? \"0\",\n        minDecimals: minDecimals ?? \"0\",\n        from: from ?? \"0\",\n        to: to\n    };\n\n    if (!attr.to) console.warn(this, \"Expected input 'to'\")\n\n    const fromTimeRef = useRef(null as Nullable<number>)\n    const bezierRef = useRef(null as Nullable<BezierEasing.EasingFunction>);\n    const updateCurrentRef = useRef(null as Nullable<() => void>);\n\n    useEffect(() => {\n        const updateCurrent = () => {\n            bezierRef.current = BezierEasing(...attr.bezier.split(\",\") as unknown as [number, number, number, number])\n            fromTimeRef.current = Date.now();\n            const fmt = new Intl.NumberFormat(undefined, {maximumFractionDigits: +attr.maxDecimals, minimumFractionDigits: +attr.minDecimals})\n\n            const potato = () => {\n                const duration = +attr.secondsDuration * 1000;\n                const toTime = fromTimeRef.current! + duration\n                const pointInLinearCurve = (duration - (toTime - Date.now())) / duration\n                const pointInBezier = bezierRef.current!(pointInLinearCurve > 1 ? 1 : pointInLinearCurve < 0 ? 0 : pointInLinearCurve)\n\n\n                const numberFrom = +attr.from;\n                const numberTo = +attr.to;\n                const diff = numberTo - numberFrom;\n\n                const current = (pointInBezier * (diff) + numberFrom);\n                this.textContent = fmt.format(current);\n\n                if (pointInBezier < 1) {\n                    requestAnimationFrame(potato);\n                }\n            };\n\n            potato()\n        }\n\n        updateCurrentRef.current = updateCurrent;\n    }, [from, to])\n\n    useEffect(() => {\n        const observer = new IntersectionObserver((elms) => {\n            if (elms[0]?.isIntersecting) {\n                updateCurrentRef.current?.();\n            } else {\n                this.textContent = attr.from;\n            }\n        }, {threshold: 1});\n\n        observer.observe(this);\n    }, [])\n}\n\ncustomElements.define(\"increment-number\", component(IncrementNumber, {useShadowDOM: false, observedAttributes: [\"from\", \"to\", \"bezier\", \"seconds-duration\", \"max-decimals\", \"min-decimals\"] as any}));\n","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n"],"names":[],"version":3,"file":"increment-number.a2a331d3.js.map"}
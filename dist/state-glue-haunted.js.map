{"mappings":"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","sources":["src/lib/state-glue-haunted.ts","src/app/state/state-glue-haunted.ts","src/app/state/state-glue-generator.ts","node_modules/haunted/lib/core.js","node_modules/haunted/lib/component.js","node_modules/haunted/lib/scheduler.js","node_modules/haunted/lib/state.js","node_modules/haunted/lib/interface.js","node_modules/haunted/lib/symbols.js","node_modules/haunted/lib/create-context.js","node_modules/haunted/lib/use-context.js","node_modules/haunted/lib/hook.js","node_modules/haunted/lib/use-effect.js","node_modules/haunted/lib/create-effect.js","node_modules/haunted/lib/use-callback.js","node_modules/haunted/lib/use-memo.js","node_modules/haunted/lib/use-controller.js","node_modules/haunted/lib/use-layout-effect.js","node_modules/haunted/lib/use-state.js","node_modules/haunted/lib/use-reducer.js","node_modules/haunted/lib/use-ref.js"],"sourcesContent":["export {useGlue} from \"../app/state/state-glue-haunted\"","import {generateGlue} from \"./state-glue-generator\";\nimport {useEffect, useState} from \"haunted/lib/core\";\n\nexport const useGlue = generateGlue(useState as any, useEffect as any)","import {State} from \"./state\";\nimport {DeepReadonly} from \"utility-types\";\nimport type {useEffect as reactUseEffect, useState as reactUseState} from \"react\";\n\nexport type GlueStatus = {\n    error: any,\n    isUpdating: boolean\n}\n\nexport type GlueResult<T> = [T, DeepReadonly<GlueStatus>];\n\nexport type ExternalState<T> = State<T>\n\n/**\n * Usage example:\n * ```\n *     const [fooGlue, fooStatus] = useGlue(fooState)\n * ```\n */\nexport const generateGlue = (useState: typeof reactUseState, useEffect: typeof reactUseEffect) => function useGlue<Z>(externalState: State<Z>, logId?: string): GlueResult<Z> {\n\n    const initialState: GlueResult<Z> = [externalState.getState(), {error: undefined, isUpdating: false}];\n\n    const [state, setState] = useState(initialState);\n\n    useEffect(() => {\n        if (logId) {\n            console.log(`${logId}:`, `State ${externalState.id} is being glued`);\n        }\n\n        const subscription = () => {\n            const selection = externalState.getState();\n            const selectorResult: GlueResult<Z> = [selection, {error: externalState.error, isUpdating: externalState.isUpdating}];\n\n            if (logId) {\n                console.log(`${logId}:`, `State ${externalState.id} is updating the element`);\n            }\n\n            setState(selectorResult);\n            //TODO: Maybe it's good to do a hacky workaround of changing above declaration to: let [state, setState]\n            //      and add here bellow: state = selectorResult\n            //      It seems that during the element rendering, setState didn't trigger a new render when this callback ran synchronously\n        };\n\n        externalState.subscribe(subscription);\n\n\n        return () => {\n            if (logId) {\n                console.log(`${logId}:`, `Disconnecting from state ${externalState.id}`);\n            }\n\n            externalState.unsubscribe(subscription);\n        };\n    }, []);\n\n    return state\n}","import { makeComponent } from './component.js';\nimport { makeContext } from './create-context.js';\nfunction haunted({ render }) {\n    const component = makeComponent(render);\n    const createContext = makeContext(component);\n    return { component, createContext };\n}\nexport { haunted as default };\nexport { useCallback } from './use-callback.js';\nexport { useController } from './use-controller.js';\nexport { useEffect } from './use-effect.js';\nexport { useLayoutEffect } from './use-layout-effect.js';\nexport { useState } from './use-state.js';\nexport { useReducer } from './use-reducer.js';\nexport { useMemo } from './use-memo.js';\nexport { useContext } from './use-context.js';\nexport { useRef } from './use-ref.js';\nexport { hook, Hook } from './hook.js';\nexport { BaseScheduler } from './scheduler.js';\nexport { State } from './state.js';\n","import { BaseScheduler } from './scheduler.js';\nconst toCamelCase = (val = '') => val.replace(/-+([a-z])?/g, (_, char) => char ? char.toUpperCase() : '');\nfunction makeComponent(render) {\n    class Scheduler extends BaseScheduler {\n        frag;\n        constructor(renderer, frag, host) {\n            super(renderer, (host || frag));\n            this.frag = frag;\n        }\n        commit(result) {\n            render(result, this.frag);\n        }\n    }\n    function component(renderer, baseElementOrOptions, options) {\n        const BaseElement = (options || baseElementOrOptions || {}).baseElement || HTMLElement;\n        const { observedAttributes = [], useShadowDOM = true, shadowRootInit = {} } = options || baseElementOrOptions || {};\n        class Element extends BaseElement {\n            _scheduler;\n            static get observedAttributes() {\n                return renderer.observedAttributes || observedAttributes || [];\n            }\n            constructor() {\n                super();\n                if (useShadowDOM === false) {\n                    this._scheduler = new Scheduler(renderer, this);\n                }\n                else {\n                    this.attachShadow({ mode: 'open', ...shadowRootInit });\n                    this._scheduler = new Scheduler(renderer, this.shadowRoot, this);\n                }\n            }\n            connectedCallback() {\n                this._scheduler.update();\n            }\n            disconnectedCallback() {\n                this._scheduler.teardown();\n            }\n            attributeChangedCallback(name, oldValue, newValue) {\n                if (oldValue === newValue) {\n                    return;\n                }\n                let val = newValue === '' ? true : newValue;\n                Reflect.set(this, toCamelCase(name), val);\n            }\n        }\n        ;\n        function reflectiveProp(initialValue) {\n            let value = initialValue;\n            let isSetup = false;\n            return Object.freeze({\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return value;\n                },\n                set(newValue) {\n                    // Avoid scheduling update when prop value hasn't changed\n                    if (isSetup && value === newValue)\n                        return;\n                    isSetup = true;\n                    value = newValue;\n                    if (this._scheduler) {\n                        this._scheduler.update();\n                    }\n                }\n            });\n        }\n        const proto = new Proxy(BaseElement.prototype, {\n            getPrototypeOf(target) {\n                return target;\n            },\n            set(target, key, value, receiver) {\n                let desc;\n                if (key in target) {\n                    desc = Object.getOwnPropertyDescriptor(target, key);\n                    if (desc && desc.set) {\n                        desc.set.call(receiver, value);\n                        return true;\n                    }\n                    Reflect.set(target, key, value, receiver);\n                    return true;\n                }\n                if (typeof key === 'symbol' || key[0] === '_') {\n                    desc = {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                        value\n                    };\n                }\n                else {\n                    desc = reflectiveProp(value);\n                }\n                Object.defineProperty(receiver, key, desc);\n                if (desc.set) {\n                    desc.set.call(receiver, value);\n                }\n                return true;\n            }\n        });\n        Object.setPrototypeOf(Element.prototype, proto);\n        return Element;\n    }\n    return component;\n}\nexport { makeComponent };\n","import { State } from './state.js';\nimport { commitSymbol, phaseSymbol, updateSymbol, effectsSymbol, layoutEffectsSymbol } from './symbols.js';\nconst defer = Promise.resolve().then.bind(Promise.resolve());\nfunction runner() {\n    let tasks = [];\n    let id;\n    function runTasks() {\n        id = null;\n        let t = tasks;\n        tasks = [];\n        for (var i = 0, len = t.length; i < len; i++) {\n            t[i]();\n        }\n    }\n    return function (task) {\n        tasks.push(task);\n        if (id == null) {\n            id = defer(runTasks);\n        }\n    };\n}\nconst read = runner();\nconst write = runner();\nclass BaseScheduler {\n    renderer;\n    host;\n    state;\n    [phaseSymbol];\n    _updateQueued;\n    constructor(renderer, host) {\n        this.renderer = renderer;\n        this.host = host;\n        this.state = new State(this.update.bind(this), host);\n        this[phaseSymbol] = null;\n        this._updateQueued = false;\n    }\n    update() {\n        if (this._updateQueued)\n            return;\n        read(() => {\n            let result = this.handlePhase(updateSymbol);\n            write(() => {\n                this.handlePhase(commitSymbol, result);\n                write(() => {\n                    this.handlePhase(effectsSymbol);\n                });\n            });\n            this._updateQueued = false;\n        });\n        this._updateQueued = true;\n    }\n    handlePhase(phase, arg) {\n        this[phaseSymbol] = phase;\n        switch (phase) {\n            case commitSymbol:\n                this.commit(arg);\n                this.runEffects(layoutEffectsSymbol);\n                return;\n            case updateSymbol: return this.render();\n            case effectsSymbol: return this.runEffects(effectsSymbol);\n        }\n    }\n    render() {\n        return this.state.run(() => this.renderer.call(this.host, this.host));\n    }\n    runEffects(phase) {\n        this.state._runEffects(phase);\n    }\n    teardown() {\n        this.state.teardown();\n    }\n}\nexport { BaseScheduler };\n","import { setCurrent, clear } from './interface.js';\nimport { hookSymbol, effectsSymbol, layoutEffectsSymbol } from './symbols.js';\nclass State {\n    update;\n    host;\n    virtual;\n    [hookSymbol];\n    [effectsSymbol];\n    [layoutEffectsSymbol];\n    constructor(update, host) {\n        this.update = update;\n        this.host = host;\n        this[hookSymbol] = new Map();\n        this[effectsSymbol] = [];\n        this[layoutEffectsSymbol] = [];\n    }\n    run(cb) {\n        setCurrent(this);\n        let res = cb();\n        clear();\n        return res;\n    }\n    _runEffects(phase) {\n        let effects = this[phase];\n        setCurrent(this);\n        for (let effect of effects) {\n            effect.call(this);\n        }\n        clear();\n    }\n    runEffects() {\n        this._runEffects(effectsSymbol);\n    }\n    runLayoutEffects() {\n        this._runEffects(layoutEffectsSymbol);\n    }\n    teardown() {\n        let hooks = this[hookSymbol];\n        hooks.forEach(hook => {\n            if (typeof hook.teardown === 'function') {\n                hook.teardown();\n            }\n        });\n    }\n}\nexport { State };\n","let current;\nlet currentId = 0;\nfunction setCurrent(state) {\n    current = state;\n}\nfunction clear() {\n    current = null;\n    currentId = 0;\n}\nfunction notify() {\n    return currentId++;\n}\nexport { clear, current, setCurrent, notify };\n","const phaseSymbol = Symbol('haunted.phase');\nconst hookSymbol = Symbol('haunted.hook');\nconst updateSymbol = Symbol('haunted.update');\nconst commitSymbol = Symbol('haunted.commit');\nconst effectsSymbol = Symbol('haunted.effects');\nconst layoutEffectsSymbol = Symbol('haunted.layoutEffects');\nconst contextEvent = 'haunted.context';\nexport { phaseSymbol, hookSymbol, updateSymbol, commitSymbol, effectsSymbol, layoutEffectsSymbol, contextEvent, };\n","import { contextEvent } from './symbols.js';\nimport { useContext } from './use-context.js';\nfunction makeContext(component) {\n    return (defaultValue) => {\n        const Context = {\n            Provider: class extends HTMLElement {\n                listeners;\n                _value;\n                constructor() {\n                    super();\n                    this.listeners = new Set();\n                    this.addEventListener(contextEvent, this);\n                }\n                disconnectedCallback() {\n                    this.removeEventListener(contextEvent, this);\n                }\n                handleEvent(event) {\n                    const { detail } = event;\n                    if (detail.Context === Context) {\n                        detail.value = this.value;\n                        detail.unsubscribe = this.unsubscribe.bind(this, detail.callback);\n                        this.listeners.add(detail.callback);\n                        event.stopPropagation();\n                    }\n                }\n                unsubscribe(callback) {\n                    this.listeners.delete(callback);\n                }\n                set value(value) {\n                    this._value = value;\n                    for (let callback of this.listeners) {\n                        callback(value);\n                    }\n                }\n                get value() {\n                    return this._value;\n                }\n            },\n            Consumer: component(function ({ render }) {\n                const context = useContext(Context);\n                return render(context);\n            }),\n            defaultValue,\n        };\n        return Context;\n    };\n}\nexport { makeContext };\n","import { hook, Hook } from './hook.js';\nimport { contextEvent } from './symbols.js';\nimport { setEffects } from './use-effect.js';\n/**\n * @function\n * @template T\n * @param    {Context<T>} context\n * @return   {T}\n */\nconst useContext = hook(class extends Hook {\n    Context;\n    value;\n    _ranEffect;\n    _unsubscribe;\n    constructor(id, state, _) {\n        super(id, state);\n        this._updater = this._updater.bind(this);\n        this._ranEffect = false;\n        this._unsubscribe = null;\n        setEffects(state, this);\n    }\n    update(Context) {\n        if (this.state.virtual) {\n            throw new Error('can\\'t be used with virtual components');\n        }\n        if (this.Context !== Context) {\n            this._subscribe(Context);\n            this.Context = Context;\n        }\n        return this.value;\n    }\n    call() {\n        if (!this._ranEffect) {\n            this._ranEffect = true;\n            if (this._unsubscribe)\n                this._unsubscribe();\n            this._subscribe(this.Context);\n            this.state.update();\n        }\n    }\n    _updater(value) {\n        this.value = value;\n        this.state.update();\n    }\n    _subscribe(Context) {\n        const detail = { Context, callback: this._updater };\n        this.state.host.dispatchEvent(new CustomEvent(contextEvent, {\n            detail,\n            bubbles: true,\n            cancelable: true,\n            composed: true, // to pass ShadowDOM boundaries\n        }));\n        const { unsubscribe = null, value } = detail;\n        this.value = unsubscribe ? value : Context.defaultValue;\n        this._unsubscribe = unsubscribe;\n    }\n    teardown() {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n    }\n});\nexport { useContext };\n","import { current, notify } from './interface.js';\nimport { hookSymbol } from './symbols.js';\nclass Hook {\n    id;\n    state;\n    constructor(id, state) {\n        this.id = id;\n        this.state = state;\n    }\n}\nfunction use(Hook, ...args) {\n    let id = notify();\n    let hooks = current[hookSymbol];\n    let hook = hooks.get(id);\n    if (!hook) {\n        hook = new Hook(id, current, ...args);\n        hooks.set(id, hook);\n    }\n    return hook.update(...args);\n}\nfunction hook(Hook) {\n    return use.bind(null, Hook);\n}\nexport { hook, Hook };\n","import { effectsSymbol } from './symbols.js';\nimport { createEffect } from './create-effect.js';\nfunction setEffects(state, cb) {\n    state[effectsSymbol].push(cb);\n}\n/**\n * @function\n * @param {() => void} effect - callback function that runs each time dependencies change\n * @param {unknown[]} [dependencies] - list of dependencies to the effect\n * @return {void}\n */\nconst useEffect = createEffect(setEffects);\nexport { setEffects, useEffect };\n","import { Hook, hook } from './hook.js';\nfunction createEffect(setEffects) {\n    return hook(class extends Hook {\n        callback;\n        lastValues;\n        values;\n        _teardown;\n        constructor(id, state, ignored1, ignored2) {\n            super(id, state);\n            setEffects(state, this);\n        }\n        update(callback, values) {\n            this.callback = callback;\n            this.values = values;\n        }\n        call() {\n            if (!this.values || this.hasChanged()) {\n                this.run();\n            }\n            this.lastValues = this.values;\n        }\n        run() {\n            this.teardown();\n            this._teardown = this.callback.call(this.state);\n        }\n        teardown() {\n            if (typeof this._teardown === 'function') {\n                this._teardown();\n            }\n        }\n        hasChanged() {\n            return !this.lastValues || this.values.some((value, i) => this.lastValues[i] !== value);\n        }\n    });\n}\nexport { createEffect };\n","import { useMemo } from './use-memo.js';\n/**\n * @function\n * @template {Function} T\n * @param    {T} fn - callback to memoize\n * @param    {unknown[]} inputs - dependencies to callback memoization\n * @return   {T}\n */\nconst useCallback = (fn, inputs) => useMemo(() => fn, inputs);\nexport { useCallback };\n","import { hook, Hook } from './hook.js';\n/**\n * @function\n * @template T\n * @param  {() => T} fn function to memoize\n * @param  {unknown[]} values dependencies to the memoized computation\n * @return {T} The next computed value\n */\nconst useMemo = hook(class extends Hook {\n    value;\n    values;\n    constructor(id, state, fn, values) {\n        super(id, state);\n        this.value = fn();\n        this.values = values;\n    }\n    update(fn, values) {\n        if (this.hasChanged(values)) {\n            this.values = values;\n            this.value = fn();\n        }\n        return this.value;\n    }\n    hasChanged(values = []) {\n        return values.some((value, i) => this.values[i] !== value);\n    }\n});\nexport { useMemo };\n","/**\n * @license\n * Portions Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { useLayoutEffect } from './use-layout-effect.js';\nimport { useState } from './use-state.js';\nconst microtask = Promise.resolve();\n/**\n * An implementation of ReactiveControllerHost that is driven by Haunted hooks\n * and `useController()`.\n */\nclass HauntedControllerHost {\n    count;\n    kick;\n    _controllers = [];\n    _updatePending = true;\n    _updateCompletePromise;\n    _resolveUpdate;\n    constructor(count, kick) {\n        this.count = count;\n        this.kick = kick;\n        this._updateCompletePromise = new Promise(res => {\n            this._resolveUpdate = res;\n        });\n    }\n    addController(controller) {\n        this._controllers.push(controller);\n    }\n    removeController(controller) {\n        // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n        // splice do nothing.\n        this._controllers && this._controllers.splice(this._controllers.indexOf(controller) >>> 0, 1);\n    }\n    requestUpdate() {\n        if (!this._updatePending) {\n            this._updatePending = true;\n            microtask.then(() => this.kick(this.count + 1));\n        }\n    }\n    get updateComplete() {\n        return this._updateCompletePromise;\n    }\n    connected() {\n        this._controllers.forEach(c => c.hostConnected && c.hostConnected());\n    }\n    disconnected() {\n        this._controllers.forEach(c => c.hostDisconnected && c.hostDisconnected());\n    }\n    update() {\n        this._controllers.forEach(c => c.hostUpdate && c.hostUpdate());\n    }\n    updated() {\n        this._updatePending = false;\n        const resolve = this._resolveUpdate;\n        // Create a new updateComplete Promise for the next update,\n        // before resolving the current one.\n        this._updateCompletePromise = new Promise(res => {\n            this._resolveUpdate = res;\n        });\n        this._controllers.forEach(c => c.hostUpdated && c.hostUpdated());\n        resolve(this._updatePending);\n    }\n}\n/**\n * Creates and stores a stateful ReactiveController instance and provides it\n * with a ReactiveControllerHost that drives the controller lifecycle.\n *\n * Use this hook to convert a ReactiveController into a Haunted hook.\n *\n * @param {<C extends ReactiveController>(host: ReactiveControllerHost) => C} createController A function that creates a controller instance.\n * This function is given a HauntedControllerHost to pass to the controller. The\n * create function is only called once per component.\n * @return {ReactiveController} the controller instance\n */\nexport function useController(createController) {\n    const [count, kick] = useState(0);\n    const [host] = useState(() => {\n        const host = new HauntedControllerHost(count, kick);\n        const controller = createController(host);\n        host.primaryController = controller;\n        host.connected();\n        return host;\n    });\n    // We use useLayoutEffect because we need updated() called synchronously\n    // after rendering.\n    useLayoutEffect(() => host.updated());\n    // Returning a cleanup function simulates hostDisconnected timing. An empty\n    // deps array tells Haunted to only call this once: on mount with the cleanup\n    // called on unmount.\n    useLayoutEffect(() => () => host.disconnected(), []);\n    host.update();\n    return host.primaryController;\n}\n","import { layoutEffectsSymbol } from './symbols.js';\nimport { createEffect } from './create-effect.js';\nfunction setLayoutEffects(state, cb) {\n    state[layoutEffectsSymbol].push(cb);\n}\n/**\n * @function\n * @param  {Effect} callback effecting callback\n * @param  {unknown[]} [values] dependencies to the effect\n * @return {void}\n */\nconst useLayoutEffect = createEffect(setLayoutEffects);\nexport { useLayoutEffect };\n","import { hook, Hook } from './hook.js';\n/**\n * @function\n * @template {*} T\n * @param {T} [initialState] - Optional initial state\n * @return {readonly [state: T, updaterFn: StateUpdater<T>]} stateTuple - Tuple of current state and state updater function\n */\nconst useState = hook(class extends Hook {\n    args;\n    constructor(id, state, initialValue) {\n        super(id, state);\n        this.updater = this.updater.bind(this);\n        if (typeof initialValue === 'function') {\n            initialValue = initialValue();\n        }\n        this.makeArgs(initialValue);\n    }\n    update() {\n        return this.args;\n    }\n    updater(value) {\n        if (typeof value === 'function') {\n            const updaterFn = value;\n            const [previousValue] = this.args;\n            value = updaterFn(previousValue);\n        }\n        this.makeArgs(value);\n        this.state.update();\n    }\n    makeArgs(value) {\n        this.args = Object.freeze([value, this.updater]);\n    }\n});\n;\nexport { useState };\n","import { hook, Hook } from './hook.js';\n/**\n * Given a reducer function, initial state, and optional state initializer function, returns a tuple of state and dispatch function.\n * @function\n * @template S State\n * @template I Initial State\n * @template A Action\n * @param {Reducer<S, A>} reducer - reducer function to compute the next state given the previous state and the action\n * @param {I} initialState - the initial state of the reducer\n * @param {(init: I) => S} [init=undefined] - Optional initializer function, called on initialState if provided\n * @return {readonly [S, (action: A) => void]}\n */\nconst useReducer = hook(class extends Hook {\n    reducer;\n    currentState;\n    constructor(id, state, _, initialState, init) {\n        super(id, state);\n        this.dispatch = this.dispatch.bind(this);\n        this.currentState = init !== undefined ? init(initialState) : initialState;\n    }\n    update(reducer) {\n        this.reducer = reducer;\n        return [this.currentState, this.dispatch];\n    }\n    dispatch(action) {\n        this.currentState = this.reducer(this.currentState, action);\n        this.state.update();\n    }\n});\nexport { useReducer };\n","import { useMemo } from './use-memo.js';\n/**\n * @function\n * @template T\n * @param   {T} initialValue\n * @return  {{ current: T }} Ref\n */\nconst useRef = (initialValue) => useMemo(() => ({\n    current: initialValue\n}), []);\nexport { useRef };\n"],"names":[],"version":3,"file":"state-glue-haunted.js.map"}